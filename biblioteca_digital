class Libro:
    def __init__(self, titulo, autor, categoria, isbn):
        self.detalles = (titulo, autor)  # Tupla para título y autor (inmutables)
        self.categoria = categoria
        self.isbn = isbn

    def __str__(self):
        return f"{self.detalles[0]} por {self.detalles[1]} (Categoría: {self.categoria}, ISBN: {self.isbn})"


class Usuario:
    def __init__(self, nombre, id_usuario):
        self.nombre = nombre
        self.id_usuario = id_usuario  # Único
        self.libros_prestados = []  # Lista de libros prestados

    def __str__(self):
        return f"Usuario: {self.nombre} (ID: {self.id_usuario}), Libros Prestados: {len(self.libros_prestados)}"


class Biblioteca:
    def __init__(self):
        self.libros_disponibles = {}  # Diccionario con ISBN como clave
        self.usuarios_registrados = set()  # Conjunto para IDs de usuario únicos
        self.historial_prestamos = {}  # Registro de préstamos

    def agregar_libro(self, libro):
        self.libros_disponibles[libro.isbn] = libro
        print(f"Libro añadido: {libro}")

    def quitar_libro(self, isbn):
        if isbn in self.libros_disponibles:
            libro = self.libros_disponibles.pop(isbn)
            print(f"Libro eliminado: {libro}")
        else:
            print("El libro con ese ISBN no existe en la biblioteca.")

    def registrar_usuario(self, usuario):
        if usuario.id_usuario not in self.usuarios_registrados:
            self.usuarios_registrados.add(usuario.id_usuario)
            self.historial_prestamos[usuario.id_usuario] = usuario
            print(f"Usuario registrado: {usuario}")
        else:
            print("El ID de usuario ya está registrado.")

    def dar_de_baja_usuario(self, id_usuario):
        if id_usuario in self.usuarios_registrados:
            self.usuarios_registrados.remove(id_usuario)
            self.historial_prestamos.pop(id_usuario, None)
            print(f"Usuario con ID {id_usuario} eliminado.")
        else:
            print("Usuario no encontrado.")

    def prestar_libro(self, id_usuario, isbn):
        if id_usuario not in self.usuarios_registrados:
            print("Usuario no registrado.")
            return
        if isbn not in self.libros_disponibles:
            print("Libro no disponible.")
            return
        usuario = self.historial_prestamos[id_usuario]
        libro = self.libros_disponibles.pop(isbn)
        usuario.libros_prestados.append(libro)
        print(f"Libro prestado: {libro} a {usuario.nombre}")

    def devolver_libro(self, id_usuario, isbn):
        if id_usuario not in self.usuarios_registrados:
            print("Usuario no registrado.")
            return
        usuario = self.historial_prestamos[id_usuario]
        for libro in usuario.libros_prestados:
            if libro.isbn == isbn:
                usuario.libros_prestados.remove(libro)
                self.libros_disponibles[isbn] = libro
                print(f"Libro devuelto: {libro}")
                return
        print("El usuario no tiene este libro prestado.")

    def buscar_libro(self, **criterios):
        resultado = []
        for libro in self.libros_disponibles.values():
            if all(getattr(libro, key) == value for key, value in criterios.items()):
                resultado.append(libro)
        return resultado

    def listar_libros_prestados(self, id_usuario):
        if id_usuario not in self.usuarios_registrados:
            print("Usuario no registrado.")
            return
        usuario = self.historial_prestamos[id_usuario]
        for libro in usuario.libros_prestados:
            print(libro)


# Ejemplo de uso
biblioteca = Biblioteca()

# Agregar libros
libro1 = Libro("1984", "George Orwell", "Ficción", "123456789")
libro2 = Libro("Cien años de soledad", "Gabriel García Márquez", "Novela", "987654321")
libro3 = Libro("Cálculo I", "James Stewart", "Matemáticas", "111111111")
libro4 = Libro("Cálculo II", "James Stewart", "Matemáticas", "222222222")
libro5 = Libro("Cálculo III", "James Stewart", "Matemáticas", "333333333")
libro6 = Libro("Trigonometría I", "Larson & Hostetler", "Matemáticas", "444444444")
libro7 = Libro("Física 1", "Serway & Jewett", "Ciencias", "555555555")
libro8 = Libro("Física 2", "Serway & Jewett", "Ciencias", "666666666")

biblioteca.agregar_libro(libro1)
biblioteca.agregar_libro(libro2)
biblioteca.agregar_libro(libro3)
biblioteca.agregar_libro(libro4)
biblioteca.agregar_libro(libro5)
biblioteca.agregar_libro(libro6)
biblioteca.agregar_libro(libro7)
biblioteca.agregar_libro(libro8)

# Registrar usuarios
usuario1 = Usuario("Juan Pérez", "U001")
usuario2 = Usuario("Ana Gómez", "U002")
biblioteca.registrar_usuario(usuario1)
biblioteca.registrar_usuario(usuario2)

# Prestar libro
biblioteca.prestar_libro("U001", "123456789")

# Listar libros prestados
biblioteca.listar_libros_prestados("U001")

# Devolver libro
biblioteca.devolver_libro("U001", "123456789")

# Buscar libro
resultados = biblioteca.buscar_libro(categoria="Ficción")
for libro in resultados:
    print(f"Libro encontrado: {libro}")
